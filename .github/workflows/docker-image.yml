name: Docker Image

on:
  push:
    branches: [main]
  schedule:
    # Runs "every Monday" (see https://crontab.guru)
    - cron: "0 0 * * MON"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false

      - name: Get latest tailscale version
        run: |
          TAILSCALE_VERSION=$(curl -s https://api.github.com/repos/tailscale/tailscale/releases/latest | jq -r '.tag_name')
          echo "Latest tailscale version: $TAILSCALE_VERSION"
          echo TAILSCALE_VERSION=$TAILSCALE_VERSION >> $GITHUB_ENV

      - name: Check if the image exists
        run: |
          if docker manifest inspect ghcr.io/${{ github.repository }}:${{ env.TAILSCALE_VERSION }}; then
            IMAGE_EXISTS=true
          else
            IMAGE_EXISTS=false
          fi
          echo "Image exists: $IMAGE_EXISTS"
          echo IMAGE_EXISTS=$IMAGE_EXISTS >> $GITHUB_ENV

      - name: Set up Docker Buildx
        if: ${{ env.IMAGE_EXISTS == 'false' || github.event_name != 'schedule' }}
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        if: ${{ env.IMAGE_EXISTS == 'false' || github.event_name != 'schedule' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/derper:${{ env.TAILSCALE_VERSION }}
            ghcr.io/${{ github.actor }}/derper:latest
          build-args: |
            DERP_VERSION=${{ env.TAILSCALE_VERSION }}
